/*
! tailwindcss v3.3.3 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #eeeeee;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: Roboto, sans-serif;
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #bdbdbd;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #bdbdbd;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(33 150 243 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(33 150 243 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 540px) {
  .container {
    max-width: 540px;
  }
}

@media (min-width: 720px) {
  .container {
    max-width: 720px;
  }
}

@media (min-width: 960px) {
  .container {
    max-width: 960px;
  }
}

@media (min-width: 1140px) {
  .container {
    max-width: 1140px;
  }
}

@media (min-width: 1320px) {
  .container {
    max-width: 1320px;
  }
}

.pointer-events-none {
  pointer-events: none;
}

.visible {
  visibility: visible;
}

.invisible {
  visibility: hidden;
}

.collapse {
  visibility: collapse;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.-top-1 {
  top: -0.25rem;
}

.-top-1\.5 {
  top: -0.375rem;
}

.left-0 {
  left: 0px;
}

.left-2 {
  left: 0.5rem;
}

.start-1 {
  inset-inline-start: 0.25rem;
}

.top-2 {
  top: 0.5rem;
}

.isolate {
  isolation: isolate;
}

.col-end-5 {
  grid-column-end: 5;
}

.m-1 {
  margin: 0.25rem;
}

.m-10 {
  margin: 2.5rem;
}

.m-7 {
  margin: 1.75rem;
}

.-my-1 {
  margin-top: -0.25rem;
  margin-bottom: -0.25rem;
}

.-my-10 {
  margin-top: -2.5rem;
  margin-bottom: -2.5rem;
}

.my-10 {
  margin-top: 2.5rem;
  margin-bottom: 2.5rem;
}

.-ml-2 {
  margin-left: -0.5rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mt-10 {
  margin-top: 2.5rem;
}

.mt-3 {
  margin-top: 0.75rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-6 {
  margin-top: 1.5rem;
}

.mt-8 {
  margin-top: 2rem;
}

.mt-px {
  margin-top: 1px;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.inline-table {
  display: inline-table;
}

.table-caption {
  display: table-caption;
}

.table-cell {
  display: table-cell;
}

.table-column {
  display: table-column;
}

.table-column-group {
  display: table-column-group;
}

.table-footer-group {
  display: table-footer-group;
}

.table-header-group {
  display: table-header-group;
}

.table-row-group {
  display: table-row-group;
}

.table-row {
  display: table-row;
}

.grid {
  display: grid;
}

.contents {
  display: contents;
}

.list-item {
  display: list-item;
}

.hidden {
  display: none;
}

.h-1 {
  height: 0.25rem;
}

.h-11 {
  height: 2.75rem;
}

.h-3 {
  height: 0.75rem;
}

.h-5 {
  height: 1.25rem;
}

.h-6 {
  height: 1.5rem;
}

.h-full {
  height: 100%;
}

.w-12 {
  width: 3rem;
}

.w-2 {
  width: 0.5rem;
}

.w-28 {
  width: 7rem;
}

.w-3 {
  width: 0.75rem;
}

.w-5 {
  width: 1.25rem;
}

.w-60 {
  width: 15rem;
}

.w-80 {
  width: 20rem;
}

.w-96 {
  width: 24rem;
}

.w-full {
  width: 100%;
}

.min-w-\[200px\] {
  min-width: 200px;
}

.max-w-screen-lg {
  max-width: 960px;
}

.flex-shrink {
  flex-shrink: 1;
}

.shrink {
  flex-shrink: 1;
}

.flex-grow {
  flex-grow: 1;
}

.grow {
  flex-grow: 1;
}

.border-collapse {
  border-collapse: collapse;
}

.-translate-x-2 {
  --tw-translate-x: -0.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-2 {
  --tw-translate-y: -0.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.resize {
  resize: both;
}

.appearance-none {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-items-center {
  justify-items: center;
}

.gap-6 {
  gap: 1.5rem;
}

.self-center {
  align-self: center;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.border {
  border-width: 1px;
}

.border-blue-gray-200 {
  --tw-border-opacity: 1;
  border-color: rgb(176 190 197 / var(--tw-border-opacity));
}

.border-t-transparent {
  border-top-color: transparent;
}

.bg-blue-gray-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(236 239 241 / var(--tw-bg-opacity));
}

.bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(244 67 54 / var(--tw-bg-opacity));
}

.bg-tertiary-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(217 76 77 / var(--tw-bg-opacity));
}

.bg-transparent {
  background-color: transparent;
}

.bg-clip-border {
  background-clip: border-box;
}

.p-1 {
  padding: 0.25rem;
}

.p-3 {
  padding: 0.75rem;
}

.px-11 {
  padding-left: 2.75rem;
  padding-right: 2.75rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.text-center {
  text-align: center;
}

.text-justify {
  text-align: justify;
}

.align-middle {
  vertical-align: middle;
}

.font-mono {
  font-family: SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
}

.font-sans {
  font-family: Roboto, sans-serif;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-\[11px\] {
  font-size: 11px;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-bold {
  font-weight: 700;
}

.font-light {
  font-weight: 300;
}

.font-medium {
  font-weight: 500;
}

.font-normal {
  font-weight: 400;
}

.font-semibold {
  font-weight: 600;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.capitalize {
  text-transform: capitalize;
}

.italic {
  font-style: italic;
}

.ordinal {
  --tw-ordinal: ordinal;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.leading-normal {
  line-height: 1.5;
}

.leading-relaxed {
  line-height: 1.625;
}

.leading-snug {
  line-height: 1.375;
}

.leading-tight {
  line-height: 1.25;
}

.tracking-normal {
  letter-spacing: 0em;
}

.text-blue-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(120 144 156 / var(--tw-text-opacity));
}

.text-blue-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(96 125 139 / var(--tw-text-opacity));
}

.text-blue-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(69 90 100 / var(--tw-text-opacity));
}

.text-blue-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(38 50 56 / var(--tw-text-opacity));
}

.text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(97 97 97 / var(--tw-text-opacity));
}

.text-pink-500 {
  --tw-text-opacity: 1;
  color: rgb(233 30 99 / var(--tw-text-opacity));
}

.text-primary-400 {
  --tw-text-opacity: 1;
  color: rgb(225 46 49 / var(--tw-text-opacity));
}

.text-secondary-400 {
  --tw-text-opacity: 1;
  color: rgb(27 45 107 / var(--tw-text-opacity));
}

.text-secondary-500 {
  --tw-text-opacity: 1;
  color: rgb(18 29 69 / var(--tw-text-opacity));
}

.text-transparent {
  color: transparent;
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-tertiary-500 {
  --tw-text-opacity: 1;
  color: rgb(217 76 77 / var(--tw-text-opacity));
}

.underline {
  text-decoration-line: underline;
}

.overline {
  text-decoration-line: overline;
}

.line-through {
  text-decoration-line: line-through;
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.opacity-0 {
  opacity: 0;
}

.opacity-100 {
  opacity: 1;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-none {
  --tw-shadow: 0 0 rgb(0, 0 / 0, 0);
  --tw-shadow-colored: 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-pink-500 {
  --tw-shadow-color: #e91e63;
  --tw-shadow: var(--tw-shadow-colored);
}

.shadow-pink-500\/20 {
  --tw-shadow-color: rgb(233 30 99 / 0.2);
  --tw-shadow: var(--tw-shadow-colored);
}

.outline {
  outline-style: solid;
}

.outline-0 {
  outline-width: 0px;
}

.ring {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow {
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.sepia {
  --tw-sepia: sepia(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.ease-in {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.\[-1\:-1\] {
  -1: -1;
}

.\[-1\:3\] {
  -1: 3;
}

.\[-2\:-1\] {
  -2: -1;
}

.\[-2\:2\] {
  -2: 2;
}

.\[-2\:space\] {
  -2: space;
}

.\[-3\:-1\] {
  -3: -1;
}

.\[-4\:-1\] {
  -4: -1;
}

.\[-4\:-2\] {
  -4: -2;
}

.\[-5\:-2\] {
  -5: -2;
}

.\[-5\:-4\] {
  -5: -4;
}

.\[-6\:-1\] {
  -6: -1;
}

.\[-7\:-4\] {
  -7: -4;
}

.\[_\:\.\] {
  _: .;
}

.\[a-zA-Z0-9\:\.\] {
  a-z-a--z0-9: .;
}

.\[a\:b\] {
  a: b;
}

.\[ax\:ax\+indx\.ndim\] {
  ax: ax+indx.ndim;
}

.\[charno\:m\.start\(\)\] {
  charno: m.start();
}

.\[chunk_start\:pos\] {
  chunk_start: pos;
}

.\[colno\:end_colno\] {
  colno: end colno;
}

.\[cur\:space\] {
  cur: space;
}

.\[current\:stop\] {
  current: stop;
}

.\[cursor_start\:_end_m\.start\(\)\] {
  cursor_start: end m.start();
}

.\[cursor_start\:m2\.start\(\)\] {
  cursor_start: m2.start();
}

.\[d1\:d2\] {
  d1: d2;
}

.\[d\:\\ipython\] {
  d: \ipython;
}

.\[data_start\:data_end\] {
  data_start: data end;
}

.\[delta\:del_upto\] {
  delta: del upto;
}

.\[dt1\:dt4\] {
  dt1: dt4;
}

.\[ellipsis_pos\:ellipsis_pos\+1\] {
  ellipsis_pos: ellipsis pos+1;
}

.\[end\:start\] {
  end: start;
}

.\[end_pos\:pos\] {
  end_pos: pos;
}

.\[endpos\:i\] {
  endpos: i;
}

.\[endpos\:semicolon\+1\] {
  endpos: semicolon+1;
}

.\[first\:last\] {
  first: last;
}

.\[from_\:to\] {
  from_: to;
}

.\[i\:endpos\] {
  i: endpos;
}

.\[i\:i\+16\] {
  i: i+16;
}

.\[i\:i\+1\] {
  i: i+1;
}

.\[i\:i\+2\] {
  i: i+2;
}

.\[i\:i\+4\] {
  i: i+4;
}

.\[i\:i\+7\] {
  i: i+7;
}

.\[i\:i\+8\] {
  i: i+8;
}

.\[i\:i\+BLOCK\] {
  i: i+BLOCK;
}

.\[i\:i\+lc2\] {
  i: i+lc2;
}

.\[i\:i\+n\] {
  i: i+n;
}

.\[i\:i\+ptrSize\] {
  i: i+ptrSize;
}

.\[i\:i\+read_count\] {
  i: i+read count;
}

.\[i\:i\+scale\] {
  i: i+scale;
}

.\[i\:i\+width\] {
  i: i+width;
}

.\[i\:j\+tokcount\] {
  i: j+tokcount;
}

.\[i\:j\] {
  i: j;
}

.\[i\:k\] {
  i: k;
}

.\[idx1\:idx2\] {
  idx1: idx2;
}

.\[idx\:idx\+2\] {
  idx: idx+2;
}

.\[idx\:idx\] {
  idx: idx;
}

.\[indent\:space_idx\] {
  indent: space idx;
}

.\[index-2\:index\] {
  index-2: index;
}

.\[index\:Series\] {
  index: Series;
}

.\[indicator_start\:indicator_end\] {
  indicator_start: indicator end;
}

.\[inherit_ndx\:inherit_ndx\+1\] {
  inherit_ndx: inherit ndx+1;
}

.\[int\:LineBreakpointWithLazyValidation\] {
  int: LineBreakpointWithLazyValidation;
}

.\[j\:chunk_end\] {
  j: chunk end;
}

.\[j\:j\+lc2\] {
  j: j+lc2;
}

.\[k1\:k2\] {
  k1: k2;
}

.\[k\:k\+n\+1\] {
  k: k+n+1;
}

.\[k\:k\+n\] {
  k: k+n;
}

.\[last\:m\.start\(0\)\] {
  last: m.start(0);
}

.\[last\:s\] {
  last: s;
}

.\[last\:start\] {
  last: start;
}

.\[lastE\:s\] {
  last-e: s;
}

.\[last_to\:from_\] {
  last_to: from;
}

.\[left\:right\] {
  left: right;
}

.\[line_offset\:end_line\] {
  line_offset: end line;
}

.\[lo\:hi\] {
  lo: hi;
}

.\[loc\:maxloc\] {
  loc: maxloc;
}

.\[loc\:newloc\] {
  loc: newloc;
}

.\[lpos_start\:lpos_end\] {
  lpos_start: lpos end;
}

.\[middle\:end\] {
  middle: end;
}

.\[middle_ts\:end\] {
  middle_ts: end;
}

.\[moff\:mend\] {
  moff: mend;
}

.\[month-1\:month\+1\] {
  month-1: month+1;
}

.\[multiline_start\:lineno\+1\] {
  multiline_start: lineno+1;
}

.\[new_i\:new_i\] {
  new_i: new i;
}

.\[new_start\:c\.start\] {
  new_start: c.start;
}

.\[offset\:next_offset\] {
  offset: next offset;
}

.\[offset\:offset\+16\] {
  offset: offset+16;
}

.\[offset\:offset\+32\] {
  offset: offset+32;
}

.\[offset\:offset\+InstrLength\] {
  offset: offset+InstrLength;
}

.\[offset\:offset\+N\*d\.nbytes\] {
  offset: offset+N*d.nbytes;
}

.\[offset\:offset\+ilen\] {
  offset: offset+ilen;
}

.\[offset\:offset\+length\] {
  offset: offset+length;
}

.\[offset\:offset\+size\+1\] {
  offset: offset+size+1;
}

.\[offset_items\:offset_items\+count_items\] {
  offset_items: offset items+count items;
}

.\[oldPosition\:self\.data\.position\] {
  old-position: self.data.position;
}

.\[oldpos\:newpos\] {
  oldpos: newpos;
}

.\[p\:p\+3\] {
  p: p+3;
}

.\[p\:p2\] {
  p: p2;
}

.\[p\:p\] {
  p: p;
}

.\[p\:q\] {
  p: q;
}

.\[p\:start\] {
  p: start;
}

.\[parse_start\:parse_end\] {
  parse_start: parse end;
}

.\[parseopt_notrack_start\:parseopt_notrack_end\] {
  parseopt_notrack_start: parseopt notrack end;
}

.\[parseopt_start\:parseopt_end\] {
  parseopt_start: parseopt end;
}

.\[pieces_start\:pieces_end\] {
  pieces_start: pieces end;
}

.\[pos\:endPos\] {
  pos: endPos;
}

.\[pos\:end_pos-2\] {
  pos: end pos-2;
}

.\[pos\:end_pos-mlen\] {
  pos: end pos-mlen;
}

.\[pos\:end_pos\] {
  pos: end pos;
}

.\[pos\:equal_pos\] {
  pos: equal pos;
}

.\[pos\:escape_pos\] {
  pos: escape pos;
}

.\[pos\:new_pos\] {
  pos: new pos;
}

.\[pos\:newpos\] {
  pos: newpos;
}

.\[pos\:pos\+1\] {
  pos: pos+1;
}

.\[position\:end\] {
  position: end;
}

.\[position\:offset\] {
  position: offset;
}

.\[position\:start\] {
  position: start;
}

.\[prev\:curr\] {
  prev: curr;
}

.\[prev\:k\] {
  prev: k;
}

.\[quote_start\:quote_end\] {
  quote_start: quote end;
}

.\[s\:e\] {
  s: e;
}

.\[s\:s\+4\] {
  s: s+4;
}

.\[s\:s\+8\] {
  s: s+8;
}

.\[s\:s\+scale\] {
  s: s+scale;
}

.\[six\:eix\] {
  six: eix;
}

.\[st\:end\] {
  st: end;
}

.\[start\:\"2022\"\] {
  start: "2022";
}

.\[start\:delim\] {
  start: delim;
}

.\[start\:edge\] {
  start: edge;
}

.\[start\:end\] {
  start: end;
}

.\[start\:loc\] {
  start: loc;
}

.\[start\:marker\.position\] {
  start: marker.position;
}

.\[start\:match\.end\(\)\] {
  start: match.end();
}

.\[start\:match\.start\(\)\] {
  start: match.start();
}

.\[start\:pos\] {
  start: pos;
}

.\[start\:stop\] {
  start: stop;
}

.\[start_i\:end_i\] {
  start_i: end i;
}

.\[start_idx\:line_idx\] {
  start_idx: line idx;
}

.\[start_pos\:end_pos\] {
  start_pos: end pos;
}

.\[start_pos\:pos-1\] {
  start_pos: pos-1;
}

.\[start_pos\:pos\] {
  start_pos: pos;
}

.\[startloc\:loc\] {
  startloc: loc;
}

.\[string_start\:string_end\] {
  string_start: string end;
}

.\[t_1\:t_2\] {
  t_1: t 2;
}

.\[text_start\:completion_start\] {
  text_start: completion start;
}

.\[toff\:tend\] {
  toff: tend;
}

.\[token_start_pos\:pos\] {
  token_start_pos: pos;
}

.\[tzname_offset\:nul\] {
  tzname_offset: nul;
}

.\[user\:passwd\@\] {
  user: passwd@;
}

.\[val1\:val2\] {
  val1: val2;
}

.\[value\:\"third\"\] {
  value: "third";
}

.before\:pointer-events-none::before {
  content: var(--tw-content);
  pointer-events: none;
}

.before\:mr-1::before {
  content: var(--tw-content);
  margin-right: 0.25rem;
}

.before\:mt-\[6\.5px\]::before {
  content: var(--tw-content);
  margin-top: 6.5px;
}

.before\:box-border::before {
  content: var(--tw-content);
  box-sizing: border-box;
}

.before\:block::before {
  content: var(--tw-content);
  display: block;
}

.before\:h-1::before {
  content: var(--tw-content);
  height: 0.25rem;
}

.before\:h-1\.5::before {
  content: var(--tw-content);
  height: 0.375rem;
}

.before\:w-2::before {
  content: var(--tw-content);
  width: 0.5rem;
}

.before\:w-2\.5::before {
  content: var(--tw-content);
  width: 0.625rem;
}

.before\:rounded-tl-md::before {
  content: var(--tw-content);
  border-top-left-radius: 0.375rem;
}

.before\:border-l::before {
  content: var(--tw-content);
  border-left-width: 1px;
}

.before\:border-t::before {
  content: var(--tw-content);
  border-top-width: 1px;
}

.before\:border-blue-gray-200::before {
  content: var(--tw-content);
  --tw-border-opacity: 1;
  border-color: rgb(176 190 197 / var(--tw-border-opacity));
}

.before\:transition-all::before {
  content: var(--tw-content);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.after\:pointer-events-none::after {
  content: var(--tw-content);
  pointer-events: none;
}

.after\:ml-1::after {
  content: var(--tw-content);
  margin-left: 0.25rem;
}

.after\:mt-\[6\.5px\]::after {
  content: var(--tw-content);
  margin-top: 6.5px;
}

.after\:box-border::after {
  content: var(--tw-content);
  box-sizing: border-box;
}

.after\:block::after {
  content: var(--tw-content);
  display: block;
}

.after\:h-1::after {
  content: var(--tw-content);
  height: 0.25rem;
}

.after\:h-1\.5::after {
  content: var(--tw-content);
  height: 0.375rem;
}

.after\:w-2::after {
  content: var(--tw-content);
  width: 0.5rem;
}

.after\:w-2\.5::after {
  content: var(--tw-content);
  width: 0.625rem;
}

.after\:flex-grow::after {
  content: var(--tw-content);
  flex-grow: 1;
}

.after\:rounded-tr-md::after {
  content: var(--tw-content);
  border-top-right-radius: 0.375rem;
}

.after\:border-r::after {
  content: var(--tw-content);
  border-right-width: 1px;
}

.after\:border-t::after {
  content: var(--tw-content);
  border-top-width: 1px;
}

.after\:border-blue-gray-200::after {
  content: var(--tw-content);
  --tw-border-opacity: 1;
  border-color: rgb(176 190 197 / var(--tw-border-opacity));
}

.after\:transition-all::after {
  content: var(--tw-content);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.placeholder-shown\:border:-moz-placeholder-shown {
  border-width: 1px;
}

.placeholder-shown\:border:placeholder-shown {
  border-width: 1px;
}

.placeholder-shown\:border-blue-gray-200:-moz-placeholder-shown {
  --tw-border-opacity: 1;
  border-color: rgb(176 190 197 / var(--tw-border-opacity));
}

.placeholder-shown\:border-blue-gray-200:placeholder-shown {
  --tw-border-opacity: 1;
  border-color: rgb(176 190 197 / var(--tw-border-opacity));
}

.placeholder-shown\:border-t-blue-gray-200:-moz-placeholder-shown {
  --tw-border-opacity: 1;
  border-top-color: rgb(176 190 197 / var(--tw-border-opacity));
}

.placeholder-shown\:border-t-blue-gray-200:placeholder-shown {
  --tw-border-opacity: 1;
  border-top-color: rgb(176 190 197 / var(--tw-border-opacity));
}

.hover\:bg-primary-300:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(255 53 55 / var(--tw-bg-opacity));
}

.hover\:shadow-lg:hover {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:shadow-pink-500\/40:hover {
  --tw-shadow-color: rgb(233 30 99 / 0.4);
  --tw-shadow: var(--tw-shadow-colored);
}

.focus\:border-2:focus {
  border-width: 2px;
}

.focus\:border-secondary-400:focus {
  --tw-border-opacity: 1;
  border-color: rgb(27 45 107 / var(--tw-border-opacity));
}

.focus\:border-t-transparent:focus {
  border-top-color: transparent;
}

.focus\:opacity-\[0\.85\]:focus {
  opacity: 0.85;
}

.focus\:shadow-none:focus {
  --tw-shadow: 0 0 rgb(0, 0 / 0, 0);
  --tw-shadow-colored: 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.focus\:outline-0:focus {
  outline-width: 0px;
}

.active\:opacity-\[0\.85\]:active {
  opacity: 0.85;
}

.active\:shadow-none:active {
  --tw-shadow: 0 0 rgb(0, 0 / 0, 0);
  --tw-shadow-colored: 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.disabled\:pointer-events-none:disabled {
  pointer-events: none;
}

.disabled\:border-0:disabled {
  border-width: 0px;
}

.disabled\:bg-blue-gray-50:disabled {
  --tw-bg-opacity: 1;
  background-color: rgb(236 239 241 / var(--tw-bg-opacity));
}

.disabled\:opacity-50:disabled {
  opacity: 0.5;
}

.disabled\:shadow-none:disabled {
  --tw-shadow: 0 0 rgb(0, 0 / 0, 0);
  --tw-shadow-colored: 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.peer:-moz-placeholder-shown ~ .peer-placeholder-shown\:text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.peer:placeholder-shown ~ .peer-placeholder-shown\:text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.peer:-moz-placeholder-shown ~ .peer-placeholder-shown\:leading-\[4\.1\] {
  line-height: 4.1;
}

.peer:placeholder-shown ~ .peer-placeholder-shown\:leading-\[4\.1\] {
  line-height: 4.1;
}

.peer:-moz-placeholder-shown ~ .peer-placeholder-shown\:text-blue-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(96 125 139 / var(--tw-text-opacity));
}

.peer:placeholder-shown ~ .peer-placeholder-shown\:text-blue-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(96 125 139 / var(--tw-text-opacity));
}

.peer:-moz-placeholder-shown ~ .peer-placeholder-shown\:before\:border-transparent::before {
  content: var(--tw-content);
  border-color: transparent;
}

.peer:placeholder-shown ~ .peer-placeholder-shown\:before\:border-transparent::before {
  content: var(--tw-content);
  border-color: transparent;
}

.peer:-moz-placeholder-shown ~ .peer-placeholder-shown\:after\:border-transparent::after {
  content: var(--tw-content);
  border-color: transparent;
}

.peer:placeholder-shown ~ .peer-placeholder-shown\:after\:border-transparent::after {
  content: var(--tw-content);
  border-color: transparent;
}

.peer:focus ~ .peer-focus\:text-\[11px\] {
  font-size: 11px;
}

.peer:focus ~ .peer-focus\:leading-tight {
  line-height: 1.25;
}

.peer:focus ~ .peer-focus\:text-secondary-400 {
  --tw-text-opacity: 1;
  color: rgb(27 45 107 / var(--tw-text-opacity));
}

.peer:focus ~ .peer-focus\:before\:border-l-2::before {
  content: var(--tw-content);
  border-left-width: 2px;
}

.peer:focus ~ .peer-focus\:before\:border-t-2::before {
  content: var(--tw-content);
  border-top-width: 2px;
}

.peer:focus ~ .peer-focus\:before\:\!border-secondary-400::before {
  content: var(--tw-content);
  --tw-border-opacity: 1 !important;
  border-color: rgb(27 45 107 / var(--tw-border-opacity)) !important;
}

.peer:focus ~ .peer-focus\:after\:border-r-2::after {
  content: var(--tw-content);
  border-right-width: 2px;
}

.peer:focus ~ .peer-focus\:after\:border-t-2::after {
  content: var(--tw-content);
  border-top-width: 2px;
}

.peer:focus ~ .peer-focus\:after\:\!border-secondary-400::after {
  content: var(--tw-content);
  --tw-border-opacity: 1 !important;
  border-color: rgb(27 45 107 / var(--tw-border-opacity)) !important;
}

.peer:disabled ~ .peer-disabled\:text-transparent {
  color: transparent;
}

.peer:disabled ~ .peer-disabled\:before\:border-transparent::before {
  content: var(--tw-content);
  border-color: transparent;
}

.peer:disabled ~ .peer-disabled\:after\:border-transparent::after {
  content: var(--tw-content);
  border-color: transparent;
}

.peer:disabled:-moz-placeholder-shown ~ .peer-disabled\:peer-placeholder-shown\:text-blue-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(96 125 139 / var(--tw-text-opacity));
}

.peer:disabled:placeholder-shown ~ .peer-disabled\:peer-placeholder-shown\:text-blue-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(96 125 139 / var(--tw-text-opacity));
}

@media (min-width: 540px) {
  .sm\:w-96 {
    width: 24rem;
  }
}